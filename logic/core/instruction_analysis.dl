// Copyright (c) 2023 Google LLC
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#pragma once

#include "defines.dl"
#include "control_flow.dl"
#include "block.dl"
#include "function.dl"
#include "instruction.dl"

#ifdef DEBUG_INSTRUCTION_ANALYSIS
#define INSTRA_OUTPUT(x) OUTPUT_IMPL(x)
#else
#define INSTRA_OUTPUT(x)
#endif


.comp _InstructionAnalysis {
  .decl is_instruction_before(iid: instr_t, iid_before: instr_t)
  INSTRA_OUTPUT(is_instruction_before)

  is_instruction_before(iid, iid_before) :-
    Instruction.get(iid, bid, _, _),
    Instruction.get(iid_before, bid, _, _),
    iid > iid_before.

  is_instruction_before(iid, iid_before) :-
    Instruction.get(iid, bid, _, _),
    Instruction.get(iid_before, bid_before, _, _),
    bid != bid_before,
    Block.get(fid, bid, _),
    CFG.block_forward_egdes(fid, bid_before, bid).
}

.init InstructionAnalysis = _InstructionAnalysis
